# settings: settings used when running these QTools scripts
## linked_node: 
#### enabled: true = run this node in linked mode (requires same config as other nodes)
#### start_cpu_index: if you want to start with a specific core, default = 1
#### end_cpu_index: define this as the last CPU to use, i.e. if you have 16, an want to use all, set to 16 or less
#### process_start_index: the index that this machine should start from when defining the core to use with the binary
## cpulimit: when running a bare-metal machine, it is common to use cpu limiting
#### enabled: when enabled will limit the CPUQuota variable in the service file
#### limit_percentage: determines the amount to limit it by
## backups: 
#### enabled: true = will back up (default to false due to needing to set up backup)
#### server_ip: the location of the backup server
#### remote_backup_dir: the custom location of the backup directory on the backup server to save to
user: ubuntu
quilibrium_repo_install_dir: .
release_version: 1.4.19.1
current_version: 1.4.19.1
os_arch: linux-amd64
qtools_version: 1
service:
    # must run qtools update-service to load updated values
    file_name: ceremonyclient
    working_dir: /home/ubuntu/ceremonyclient/node
    restart_time: 5s
    clustering:
        enabled: false
        has_data_workers: false
        data_worker_count: false
        data_worker_index_start: 1
        servers: []
    args: "" # args to be passed into the main process: e.g. node-1.4.19.1-linux-amd64 --debug
    max_threads: false
scheduled_tasks:
    backup:
        enabled: true
        cron_expression: ""
        # TODO: refer scripts to use this and remove .settings.backups values
        node_backup_name: ""
        backup_url: backups.example.com
        remote_user: root
        ssh_key_path: ~/.ssh/backup-server
        remote_backup_dir: /root/backups
    updates:
        qtools:
            enabled: true
            cron_expression: ""
        node:
            enabled: true
            cron_expression: ""
        system:
            enabled: false
            cron_expression: ""
    logs:
        enabled: false
        cron_expression: ""
    statistics:
        enabled: true
        service_name: quil_statistics
        prometheus:
            endpoint: https://stats.qcommander.sh:9090/api/v1/write
            tls_config:
                cert_file: "/files/grafana.cert"
                key_file: "/files/grafana.key"
                server_name: stats.qcommander.sh
        loki:
            endpoint: https://stats.qcommander.sh:3100/loki/api/v1/push
            tls_config:
                cert_file: "/files/grafana.cert"
                key_file: "/files/grafana.key"
                server_name: stats.qcommander.sh
        grafana:
            alloy:
                enabled: true
                template_file: "/files/alloy.config"
                config_file: /etc/alloy/alloy.conf
    diagnostics:
        enabled: true
        cron_expression: ""
settings:
    auto_updates:
        node: true
        qtools: true
    statistics:
        enabled: true
    diagnostics:
        enabled: false
    listenAddr:
        mode: "udp"
    cpulimit:
        enabled: false
        limit_percentage: 70
    source_repository:
        default: https://github.com/QuilibriumNetwork/ceremonyclient.git
        # more for notes at this point
        mirrors:
            - https://source.quilibrium.com/quilibrium/ceremonyclient.git
    install:
        tailscale:
            ephemeral_key: ""
        yq:
            version: v4.44.2
            binary: yq_linux_amd64
            binary_install_dir: /usr/bin/
        ssh:
            disable_password_login: true
            public_key_url: ""
            public_key_string: ""
        go:
        # not implemented
            install: false
            version: 1.20.14
        rust:
        # not implemented
            install: false
            version: 0.0.0
    docker:
        # Not used currently
        enabled: false
    backups:
        enabled: false
        restore_on_install: false
        node_backup_dir: ""
        backup_url: backups.example.com
        remote_user: root
        ssh_key_path: ~/.ssh/backup-server
        remote_backup_dir: /root/backups
    debug: false
    log_file: debug.log
    snapshots:
        enabled: true
